version: '3.9'

services:
  gym-helper:
    container_name: gym-power-service
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8000:80"
    volumes:
      - .:/gym-helper/
      - ../static_files:/media
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5
    environment:
      - WATCHFILES_FORCE_POLLING=true
    restart: always

  postgres:
    image: postgres:14.6
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  postgres_test:
    image: postgres:14.6
    ports:
      - "65432:5432"
    environment:
      POSTGRES_DB: ${TEST_DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./data/postgres_test:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:6.2-alpine

  celery_worker:
    container_name: celery_worker
    build: .
    command: celery -A celery_worker.celery worker --loglevel=info
    volumes:
      - .:/gym-helper
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - gym-helper
      - redis

  flower:
    container_name: flower
    build: .
    command: celery -A celery_worker.celery flower --port=5555
    ports:
      - "5556:5555"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - gym-helper
      - redis
      - celery_worker